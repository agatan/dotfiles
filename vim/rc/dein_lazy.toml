# Auto Complete
[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_i = 1
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/neocomplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
on_ft = 'snippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/echodoc'
on_i = 1

# Unite
[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
on_cmd = ['Unite', 'UniteResume']
hook_add = '''
  nnoremap [unite] <Nop>
  nmap <Space>u [unite]

  nnoremap <silent> [unite]f :<C-u>Unite -start-insert file_rec file_mru file/new<CR>
  nnoremap <silent> [unite]d :<C-u>Unite -start-insert directory_rec directory_mru directory/new<CR>
  nnoremap <silent> [unite]b :<C-u>Unite -start-insert buffer<CR>
  nnoremap <silent> [unite]g :<C-u>Unite -start-insert grep<CR>
  nnoremap <silent> [unite]s :<C-u>Unite -buffer-name=search line -start-insert<CR>
  nnoremap <silent> [unite]r :<C-u>UniteResume<CR>
'''
hook_source = '''
  let g:unite_enable_start_insert = 1
  let g:unite_enable_smart_case = 1
  if (executable('ag'))
    let g:unite_source_grep_command = 'ag'
    let g:unite_source_grep_default_opts = '--nocolor --nogroup'
  endif
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

# User Interface
[[plugins]]
repo = 'airblade/vim-gitgutter'
on_path = '.*'

[[plugins]]
repo = 'airblade/vim-rooter'
on_path = '.*'
hook_add = 'let g:rooter_use_lcd = 1'

# Git Integration
[[plugins]]
repo = 'lambdalisue/vim-gita'
hook_add = '''
  nnoremap <silent> [Space]gs :<C-u>Gita status<CR>
'''

# Coding Support
[[plugins]]
repo = 'tyru/caw.vim'
on_map = '<Plug>'
hook_add = '''
  nmap <Space>c <Plug>(caw:hatpos:toggle)
  vmap <Space>c <Plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'rhysd/devdocs.vim'
on_cmd = ['DevDocs', 'DevDocsAll']
on_map = '<Plug>'
hook_add = '''
  augroup devdocs
    autocmd!
    autocmd FileType c,cpp,php,ruby nmap <buffer>K <Plug>(devdocs-under-cursor)
  augroup END
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_cmd = 'EasyAlign'

# Language Support
# golang
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
  let g:go_fmt_command = 'goimports'
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
  let g:syntastic_go_checkers = ['go', 'govet', 'golint']
'''

# C/C++
[[plugins]]
repo = 'justmao945/vim-clang'
on_ft = ['c', 'cpp']
hook_add = '''
  let g:clang_compilation_database = './build'
  let g:clang_cpp_complete_opt = 'menuone'
  let g:clang_c_complete_opt = 'menuone'
  let g:clang_auto = 0
  let g:clang_cpp_options = '-std=c++1z'
  let g:clang_format_auto = 0
  let g:clang_format_style = 'Chromium'
  let g:syntastic_cpp_checkers = []
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add = '''
  augroup clang-format
    autocmd!
    autocmd FileType c,cpp nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
    autocmd FileType c,cpp vnoremap <buffer><Leader>cf :ClangFormat<CR>
    autocmd FileType c,cpp map <buffer><Leader>f <Plug>(operator-clang-format)
  augroup END
'''

# dlang
[[plugins]]
repo = 'idanarye/vim-dutyl'
on_ft = 'd'

# Haskell
[[plugins]]
repo = 'eagletmt/ghcmod-vim'
if = 'executable("ghc-mod")'
on_ft = ['haskell']
hook_source = '''
  nnoremap <Leader>t :<C-u>GhcModType<CR>
  nnoremap <Leader>T :<C-u>GhcModTypeClear<CR>
'''

[[plugins]]
repo = 'eagletmt/neco-ghc'
if = ' executable("ghc-mod") '
on_ft = ['haskell']

[[plugins]]
repo = 'itchyny/vim-haskell-indent'
on_ft = ['haskell']

[[plugins]]
repo = 'eagletmt/unite-haddock'
on_ft = ['haskell']
if = 'executable("hoogle")'
depends = 'unite.vim'
hook_source = '''
  command! Hoogle Unite -auto-preview hoogle:exact
'''

# Rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = ['rust']

# Vim script
[[plugins]]
repo = 'rbtnn/vimconsole.vim'
on_cmd = 'VimConsoleOpen'

[[plugins]]
repo = 'thinca/vim-prettyprint'
on_cmd = 'PrettyPrint'

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
