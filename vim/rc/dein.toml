[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''
build = 'make'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# Visual {{{
[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'rhysd/wallaby.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
      \ 'active': {
      \     'left': [ ['mode', 'paste'], ['readonly', 'filename', 'modified'] ]
      \ }
      \ }
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# Unite {{{
[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_source = 'unite.vim'

[[plugins]]
repo = 'thinca/vim-unite-history'
on_source = 'unite.vim'
# }}}

# ctrlp {{{
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
# }}}

[[plugins]]
repo = 'scrooloose/syntastic'

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star-with-echo)
  nmap # <Plug>(anzu-shart-with-echo)
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugin]]
repo = 'editorconfig/editorconfig-vim'
