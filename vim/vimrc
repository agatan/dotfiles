set encoding=utf-8
scriptencoding utf8

" tiny とsmall では読み込まない
if !1 | finish | endif

nnoremap <Space>. :edit $MYVIMRC<CR>

" :ReloadVimrc load $MYVIMRC
command! ReloadVimrc source $MYVIMRC

augroup myvimrc
  autocmd!
augroup END


"" Plugins

let s:dein_dir = expand('~/.cache/dein')
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

let s:dein_toml = expand('~/.vim/rc/dein.toml')
let s:dein_lazy_toml = expand('~/.vim/rc/dein_lazy.toml')

if has('vim_starting')
  execute 'set runtimepath+=' . s:dein_repo_dir
  if !isdirectory(s:dein_repo_dir)
    echo 'install vim-plug...'
    call mkdir(s:dein_repo_dir, 'p')
    call system('git clone https://github.com/Shougo/dein.vim ' . s:dein_repo_dir)
  end
endif

if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir, [expand('<sfile>'), s:dein_toml, s:dein_lazy_toml]) "{{{

  call dein#load_toml(s:dein_toml, {'lazy': 0})
  call dein#load_toml(s:dein_lazy_toml, {'lazy': 1})

  call dein#end() "}}}
  call dein#save_state()
endif

" 先に vimproc をインストールする
if has('vim_starting') && dein#check_install(['vimproc'])
    call dein#install(['vimproc'])
endif

if has('vim_starting') && dein#check_install()
    call dein#install()
endif

filetype plugin indent on

" language support {{{

"" OCaml
if executable('opam')
  let s:opamshare = substitute(system('opam config var share'), '\n$', '', '''')
  if isdirectory(s:opamshare)
    execute 'set rtp+=' . s:opamshare . '/merlin/vim'
    let g:syntastic_ocaml_checkers = ['merlin']
    execute 'set rtp+=' . s:opamshare . '/ocp-indent/vim'
    execute 'helptags ' . s:opamshare . '/merlin/vim/doc'
  endif

  function! s:ocaml_format()
    let now_line = line('.')
    execute ':%! ocp-indent'
    execute ':' . now_line
  endfunction

  function! s:ocaml_setup()
    nnoremap <Leader>t :<C-u>MerlinTypeOf<CR>
    vnoremap <Leader>t :<C-u>MerlinTypeOfSel<CR>
    nnoremap <Leader>n :<C-u>MerlinGrowEnclosing<CR>
    nnoremap <Leader>p :<C-u>MerlinShrinkEnclosing<CR>
    nnoremap <Leader>r <Plug>(MerlinRename)
    nnoremap <Leader>d :<C-u>MerlinDestruct<CR>
    nnoremap <Leader>o :<C-u>MerlinOutline<CR>
    nnoremap <Leader>gd :<C-u>MerlinLocate<CR>
  endfunction

  if executable('ocp-indent')
    augroup ocamlindent
      autocmd!
      autocmd BufWritePre *.ml call s:ocaml_format()
    augroup END
  endif

  augroup ocaml
    autocmd!
    autocmd FileType ocaml call s:ocaml_setup()
  augroup END
endif
" }}}

" 基本設定 {{{
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 全般
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:mapleader = ','
set nobackup
set clipboard=unnamed,unnamedplus
set t_vb=
set visualbell
set noerrorbells

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" display
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
if !has('gui_running')
    set t_Co=256
endif
set background=dark
colorscheme jellybeans

set cmdheight=2
set hidden
set number
set scrolloff=5
set wrap
set showbreak=+\
set cursorline
set cursorcolumn
set colorcolumn=80
set ruler
set tabstop=2
set softtabstop=2
set expandtab
set smarttab
set laststatus=2
set foldmethod=marker
set foldlevel=100
set list
set listchars=tab:▸\ ,trail:-,eol:¬
" 補完ポップアップの高さ設定
set pumheight=10
syntax on

augroup myvimrc
  autocmd BufWritePost * if expand('%') != '' && &buftype !~ 'nofile' | silent mkview | endif
  autocmd BufReadPost * if expand('%') != '' && &buftype !~ 'nofile' | silent loadview | endif
augroup END
set viewoptions-=options

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" search
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
set incsearch
set ignorecase
set smartcase
set nohlsearch
set keywordprg=:help
if !exists('loaded_matchit')
  " matchitを有効化
  runtime macros/matchit.vim
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""
" input
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
set backspace=indent,eol,start
set autoindent
set shiftwidth=2
set showmatch
set whichwrap=b,s,h,l,<,>,[,]
set smarttab

nnoremap ; :
vnoremap ; :
nnoremap : ;
vnoremap : ;

" }}}
